MongoDB installation:
wget -qO - https://www.mongodb.org/static/pgp/server-5.0.asc | sudo apt-key add - 
(Add reopsitory key of mongodb to apt keyring)
sudo nano /etc/apt/sources.list.d/mongodb.list 
(Add mongodb repository to our repository)

Add this in the file:
      deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu focal/mongodb-org/5.0 multiverse


sudo apt update 
sudo apt install mongodb-org 


sudo systemctl enable mongod 
sudo systemctl start mongod 

sudo systemctl status mongod 


CRUD OPERATIONS

db.students.insertMany([
  { id: 1, name: 'Ryan', gender: 'M' ,marks:70 },
  { id: 2, name: 'Joanna', gender: 'F' ,marks:70},
  { id: 3, name: 'Prabhu', gender: 'M' ,marks:65},
  { id: 4, name: 'Kanhaiyya', gender: 'M' ,marks:65},
]);
db.students.find({$and:[{"gender":'M' }, {"marks":{$lt:70}}]})

db.students.find({"marks":{$in:[65,70]}})

db.student.update({"firstname":"Gajendran"}, {$set:{cgpa:8.875}}

db.student.remove({"lastname":"G"})

db.student.find({},{"cgpa":1, _id:0})  //projection

db.students.aggregate([{$group: {_id: "$gender", sumval : {$sum: "$marks"}}} ])




REPLICATION


  mkdir -p $home/mongo/data/db01
   mongod --replSet dbrs --port 27021 --dbpath $home/mongo/data/db01
  mkdir -p  $home/mongo/data/db02
  mongod --replSet dbrs --port 27022 --dbpath $home/mongo/data/db02
  mkdir -p $home/mongo/data/db03
  mongod --replSet dbrs --port 27023 --dbpath $home/mongo/data/db03

  mongosh --port 27021

  rsconf={
  _id:"dbrs",
  members=[
  {
 _id:0,
  host:"127.0.0.1:27021",
  priority:3
 }  ,{
  _id:1,
  host:"127.0.0.1:27022",
 priority:1
}  ,{
  _id:2,
  host:"127.0.0.1:27023",
  priority:2

  }]};

  db.getMongo().setReadPref("primary")

  rs.initiate(rsconf);
  
  
  
  
  
  
  SHARDING
  
  cd Desktop
  mkdir -p data/configdb
  
  mongod --configsvr --replSet config --dbPath data/configdb
  mongosh --port 27019
  rs.initiate()
  rs.status()
  
  cd data
  mkdir db
  mkdir db2
  
  
  mongod --shardsvr --replSet shard1 --dbPath data/db --port 27010
  mongosh --port 27010
  rs.initiate()
  rs.status()
  
  
  
  mongo --shardsvr --replSet shard2 --dbPath data/db2 --port 27011
  mongosh --port 27011
  rs.initiate()
  rs.status()
  
  
  mongos --configdb config/127.0.0.1:27019
  
  
  mongosh
  
  
  sh.status()
  sh.addShard("shard1/localhost:27010")
  sh.addShard("shard2/localhost:27011")
  
  // TO check the number of shards we can write:    db.adminCommand({listShards:1})
  
  
  sh.enableSharding("populations")
  sh.shardCollection("population.cities",{"country":"hashed"});
  
  use populations
  
  //INSERT DATA INTO POPULATION.cities
  
  db.cities.insertMany([  { },{ },{ } ]);
  
  
  
  db.cities.getShardDistribution()
  db.cities.find().explain()
db.cities.find({"continent":"europe"}).explain()
db.cities.find({"country" : "India"}).explain()














HADOOP INSTALLATION:

(Download Hadoop & java)
curl https://dlcdn.apache.org/hadoop/common/hadoop-3.3.5/hadoop-3.3.5.tar.gz > hadoop

tar -xzvf hadoop
(Set the path in .bashrc file)
export JAVA_HOME=/user/aakashls/jdk1.8.0_202

(MODIFY the configuration files:)

etc/hadoop/core-site.xml
<property>
<name>fs.default.name</name>
<value>hdfs://localhost:50000</value>
</property>




etc/hadoop/yarn-site.xml
<property>
<name>yarn.nodemanager.aux-services</name>
<value>mapreduce_shuffle</value>
</property>
<property>
<name>yarn.nodemanager.aux-services.mapreduce.shuffle.class</name>
<value>org.apache.hadoop.mapred.ShuffleHandler</value>
</property>
<property>
<description>The hostname of the RM.</description>
<name>yarn.resourcemanager.hostname</name>
<value>localhost</value>
</property>
<property>

<description>The address of the applications manager interface in the RM.</description>
<name>yarn.resourcemanager.address</name>
<value>localhost:8032</value>
</property>





etc/hadoop/hdfs-site.xml

<property>
<name>dfs.namenode.name.dir</name>
<value>/home/aakashls/hadoop-dir/namenode-dir</value>
</property>
<property>
<name>dfs.datanode.data.dir</name>
<value>/home/aakashls/hadoop-dir/datanode-dir</value>
</property>




etc/hadoop/mapred-site.xml
<property>
<name>mapreduce.framework.name</name>
<value>yarn</value>
</property>




Enter the java path in  hadoop-env, mapred-env ,yarn-env files

Start all hadoop related services
sbin/start-all.sh



HIVE INSTALLATION


Modify hadoop file to enable MapReduce

/etc/hadoop/mapred-site.xml
<property>
<name>yarn.app.mapreduce.am.env</name>
<value>HADOOP_MAPRED_HOME=${full path of your hadoop distribution directory}</value>
</property>
<property>
<name>mapreduce.map.env</name>
<value>HADOOP_MAPRED_HOME=${full path of your hadoop distribution directory}</value>
</property>
<property>
<name>mapreduce.reduce.env</name>
<value>HADOOP_MAPRED_HOME=${full path of your hadoop distribution directory}</value>
</property>




(Download mysql for metastore)
sudo apt install mysql-server


(Download Hive)
curl https://dlcdn.apache.org/hive/hive-2.3.9/apache-hive-2.3.9-bin.tar.gz > apache-hive-2.3.9-bin.tar.gz
tar -xzf apache-hive-2.3.9-bin.tar.gz



(Create the hive-site.xml file and configure it )

(Create the metastore database in mysql)
bin/schematool -dbType mysql -initSchema


(View metadata in mysql)
mysql -u root -p
show databases;
use metastore;
show tables;


bin/hive  (Start hive)
